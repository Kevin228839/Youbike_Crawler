## Service
apiVersion: v1
kind: Service
metadata:
  name: my-rabbitmq
spec:
  selector: # the service is applied to pods whose label equals to "app: rabbitmq" 
    app: rabbitmq
  type: NodePort
  ports:
    - name: rabbitmq
      port: 5672
      targetPort: 5672
      nodePort: 30000
    - name: rabbitmq-management
      port: 15672
      targetPort: 15672
      nodePort: 30001
---
apiVersion: v1
kind: Service
metadata:
  name: my-mongodb
spec:
  selector: # the service is applied to pods whose label equals to "app: mongodb" 
    app: mongodb
  type: NodePort
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
      nodePort: 30002
---
apiVersion: v1
kind: Service
metadata:
  name: my-server
spec:
  selector: # the service is applied to pods whose label equals to "app: server" 
    app: server
  type: NodePort
  ports:
    - name: server
      port: 30005
      targetPort: 30005
      nodePort: 30005
---
## Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-rabbitmq
spec:
  replicas: 1 # 1 pod (note: every pod is independent to each other)
  selector:
    matchLabels:
      app: rabbitmq
  template: # configuration for a rabbitmq contaienr wrapped in a pod
    metadata: 
      labels: 
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.9.18-management-alpine
          ports: 
            - containerPort: 5672
            - containerPort: 15672
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests: 
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            tcpSocket: # an alternative to 'httpGet' and is used when you want to check the health or readiness
              port: 5672
          readinessProbe: # pods are excluded from the set of endpoints used by Services or load balancers until it becomes ready
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 3
            failureThreshold: 1
            tcpSocket:
              port: 5672
--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-mongodb
spec:
  replicas: 1 # 1 pod (note: every pod is independent to each other)
  selector:
    matchLabels:
      app: mongodb
  template: # configuration for a mongodb contaienr wrapped in a pod
    metadata: 
      labels: 
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo
          ports: 
            - containerPort: 27017
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests: 
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            tcpSocket: # an alternative to 'httpGet' and is used when you want to check the health or readiness
              port: 27017
          readinessProbe: # pods are excluded from the set of endpoints used by Services or load balancers until it becomes ready
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 3
            failureThreshold: 1
            tcpSocket:
              port: 27017
--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-server
spec:
  replicas: 1 # 1 pod (note: every pod is independent to each other)
  selector:
    matchLabels:
      app: server
  template: # configuration for a mongodb contaienr wrapped in a pod
    metadata: 
      labels: 
        app: server
    spec:
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox:latest
          command: ['sh', '-c', "until nc -z my-rabbitmq 5672; do echo `date`; sleep 1; done"]
        - name: wait-for-mongodb
          image: busybox:latest
          command: ['sh', '-c', "until nc -z my-mongodb 27017; do echo `date`; sleep 1; done"]
      containers:
        - name: server
          image: kevin228839/youbike-crawler:v2
          ports: 
            - containerPort: 30005
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests: 
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            tcpSocket: # an alternative to 'httpGet' and is used when you want to check the health or readiness
              port: 30005
          readinessProbe: # pods are excluded from the set of endpoints used by Services or load balancers until it becomes ready
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 3
            failureThreshold: 1
            tcpSocket:
              port: 30005